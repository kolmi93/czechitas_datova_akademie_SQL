-- Nastavení schématu
-- 1. ROLE -- zadejte svou roli
USE ROLE ROLE_CZECHITA_KOLAROVAM;
-- 2. WAREHOUSE
USE WAREHOUSE COMPUTE_WH;
-- 3. DATABASE
USE DATABASE COURSES;
-- 4. SCHEMA -- zadejte sve schema
USE SCHEMA SCH_CZECHITA_KOLAROVAM;


-- 1. VYTVOŘENÍ PRVNÍ TEMPORARY TABLE S TITLES * A RATINGS AVERAGERATINGS A NUMVOTES + 2. PŘEVEDENÍ TITLETYPE NA TITLETYPE_NEW
CREATE OR REPLACE TEMPORARY TABLE TEMPORARY_IMDB AS
SELECT 
    IMDB_TITLES.*
    , CASE
        WHEN IMDB_TITLES.TITLETYPE IN ('movie', 'short', 'tvMovie', 'tvShort') THEN 'Movie'
        WHEN IMDB_TITLES.TITLETYPE IN ('tvSeries', 'tvMiniSeries') THEN 'TV Show'
        END AS TITLETYPE_NEW
    , IMDB_RATINGS.AVERAGERATING
    , IMDB_RATINGS.NUMVOTES
FROM SCH_CZECHITA.IMDB_RATINGS
INNER JOIN COURSES.SCH_CZECHITA.IMDB_TITLES
ON IMDB_TITLES.TCONST = IMDB_RATINGS.TCONST;

-- 3. SPOJENÍ VŠECH TABULEK DO JEDNÉ NETFLIX_IMDB
-- nezapomenout odstranit duplicitní sloupce, pomocí kterých se tabulky joinují !!
CREATE OR REPLACE TABLE NETFLIX_IMDB AS
SELECT
    	NETFLIX.SHOW_ID
    	, IMDB.TCONST
	, NETFLIX.TITLE
   	, IMDB.TITLETYPE_NEW
	, NETFLIX.DIRECTOR
	, NETFLIX.CAST
	, NETFLIX.COUNTRY
	, NETFLIX.DATE_ADDED
	, NETFLIX.RELEASE_YEAR
	, NETFLIX.RATING
	, NETFLIX.DURATION
	, NETFLIX.LISTED_IN
	, NETFLIX.DESCRIPTION
	, IMDB.ORIGINALTITLE
	, IMDB.ISADULT
	, IMDB.ENDYEAR
	, IMDB.RUNTIMEMINUTES
	, IMDB.GENRES
	, IMDB.__HEVO__INGESTED_AT AS __HEVO__INGESTED_AT_ON_IMDB
    	, NETFLIX.__HEVO__INGESTED_AT AS __HEVO__INGESTED_AT_ON_NETFLIX
	, IMDB.__HEVO__MARKED_DELETED AS __HEVO__MARKED_DELETED_ON_IMDB
	, NETFLIX.__HEVO__MARKED_DELETED AS __HEVO__MARKED_DELETED_ON_NETFLIX
	, IMDB.AVERAGERATING
	, IMDB.NUMVOTES
FROM COURSES.SCH_CZECHITA.NETFLIX_TITLES AS NETFLIX
INNER JOIN TEMPORARY_IMDB AS IMDB
ON IMDB.PRIMARYTITLE = NETFLIX.TITLE AND IMDB.STARTYEAR = NETFLIX.RELEASE_YEAR AND IMDB.TITLETYPE_NEW = NETFLIX.TYPE;

-- 4. Kolik je ve výsledku duplicit? (GROUP BY & HAVING). (Duplicity posuzujte tak, ze se neopakuje SHOW_ID (id Netflix datasetu)). Úkolem není duplicity smazat! Pouze napište dotaz, který vás k duplicitám dovede a napište, kolik jich tam vidíte.

SELECT
    SHOW_ID, COUNT (*)
FROM NETFLIX_IMDB
GROUP BY SHOW_ID
HAVING COUNT(*) > 1;